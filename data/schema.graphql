type Jobs {
    id: ID
    company: String
    logo: String
    position: String
    category: CategoryJob
    city: CityJob
    country: String
    link: String
    email: String
    remote: Boolean
    startDate: String
    tags: [Tags]
}
type User {
    name: String,
    lastname: String,
    email: String,
    password: String,
    role: String,
    company: Array,
}
type Tags {
    tag: String
}
type Token{
    token: String!
}
type Query {
    getJobs(limit: Int, offset: Int): [Jobs]
    byCategories(category: String, limit: Int, offset: Int): [Jobs]
    totalJobs : String
    totalCategories(category: String): String
    
    getUser : User
}
enum CategoryJob{
    SOFTWARE_DEVELOP
    SOCIAL_MEDIA
    DESIGNER
    SALES
}

enum CityJob{
    SANTA_CRUZ
    LA_PAZ
    COCHABAMBA
    CHUQUISACA
    TARIJA
    ORURO
    POTOSI
    BENI
    PANDO
}
input TagsInput{
    tag: String
}
input JobInput {
    id: ID
    company: String
    logo: String
    position: String
    category: String
    city: String
    country: String
    link: String
    email: String
    remote: Boolean
    startDate: String
    tags: [TagsInput]
}

type Mutation{
    addJob(input: JobInput) : Jobs
    createUser(email: String!, password: String!, name: String, lastname: String, company: String, role: String): String
    autenticateUser(email: String!, password: String!): Token
}